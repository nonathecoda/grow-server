@using Grow.Data.Entities
@using Grow.Server.Model.Extensions
@using Grow.Server.Model.ViewModels
@model ICollection<Event>

@{
    ViewBag.Title = "Program";
}

<article id="main">

    <header class="special container">
        <span class="icon fa-calendar-o"></span>
        <h2>Here's the <strong>Agenda</strong> of @ViewBag.SelectedContestName</h2>
    </header>
    @if (Model.Any())
    {
        <section id="calendar" class="wrapper style4 container">
            <div class="content">
                <section>
                    <header>
                        <h3>Event calendar</h3>
                    </header>

                    <ul>
                        @{
                            var currentMonth = Model.Min(e => e.Start);
                            var endMonth = Model.Max(e => e.Start);
                        }
                        @do
                        {
                            <li>@string.Format("{0:MMMM} '{0:yy}", currentMonth).ToUpper()</li>
                            foreach (var evnt in Model.Where(e => e.Start.Month == currentMonth.Month && e.Start.Year == currentMonth.Year))
                            {
                                <li>
                                    <a href="#@evnt.Id" style="@(evnt.Visibility == Event.EventVisibility.Public ? "font-weight: 400;" : "")">
                                        @(evnt.Start.Day)@(evnt.Start.GetDayExtension()) - @evnt.Name
                                    </a>
                                </li>
                            }
                            <li>&nbsp;</li>
                            currentMonth = currentMonth.AddMonths(1);
                        } while (currentMonth.TotalMonths() <= endMonth.TotalMonths());
                    </ul>

                    <p>
                        The support program consists of two main areas: <b>Mentoring</b> to access experience of others and <b>Workshops</b> to improve yourself. More information will follow later on.
                    </p>
                </section>
            </div>
        </section>

        @foreach (var evnt in Model)
        {
            @if (evnt.Type == Event.EventType.MainEvent)
            {
                <a name="@evnt.Name.Replace(" ", String.Empty).ToLower()"></a>
            }
            <section id="@evnt.Id" class="wrapper style4 container">
                <div class="content">
                    <section>
                        <header>
                            <h3>@evnt.Name</h3>
                        </header>

                        <partial name="Partials/_EventDetailsPartial" model="new EventViewModel(evnt)" />

                        @if (evnt.CanVisitorRespondNow())
                        {
                            <div style="text-align: center; margin: 40px;">
                                @Html.ActionLink("Are you coming?", "Respond", "Event", new { id = evnt.Id }, new { @class = "button btn btn-default" })
                            </div>
                        }
                    </section>
                </div>
            </section>
        }
    }
    else
    {
        <section class="wrapper style4 container">
            <div class="content">
                <section style="text-align: center">
                    <header>
                        <h3>Stay tuned</h3>
                    </header>

                    <p>
                        No events have been publicized yet. Check back later for more details or follow us on Social Media:
                    </p>
                    <ul class="icons">
                        <li><a href="https://www.facebook.com/Pioniergarage/" target="_blank">Facebook</a></li>
                        <li><a href="https://instagram.com/pioniergarage" target="_blank">Instagram</a></li>
                    </ul>
                    @{
                        var lastYear = (ViewBag.ContestYears as IDictionary<int, string>).Values
                            .Where(y => y.CompareTo(ViewBag.SelectedContestYear) < 0)
                            .OrderByDescending(y => y)
                            .FirstOrDefault();
                    }
                    @if (!string.IsNullOrEmpty(lastYear))
                    {
                        <p>
                            You can also check out @Html.ActionLink("the program of the last contest", "Program", "Home", new { year = lastYear }).
                        </p>
                    }
                </section>
            </div>
        </section>
    }

</article>
