@using Grow.Server.Areas.MyTeam.Model.ViewModels
@model IEnumerable<TeamEventViewModel>

@{
    ViewData["Title"] = "My Team";
    Layout = "Layouts/_BackendLayout";

    var queries = new Dictionary<string, IOrderedEnumerable<TeamEventViewModel>>()
    {
        { "upcoming", Model.Where(e => e.Start >= DateTime.Now.Date).OrderBy(e => e.Start) },
        { "past", Model.Where(e => e.Start < DateTime.Now.Date).OrderBy(e => e.Start) },
    };
    var first = true;
}

<div class="row">
    <div class="col-md-12" id="events">

        @foreach (var pair in queries)
        {
            var key = pair.Key;
            var query = pair.Value;

            <div class="card" id="@key">
                <div class="card-header">
                    <a href="#@key-body" data-toggle="collapse" role="button" aria-expanded="true" aria-controls="@key-body">
                        <h5 style="text-transform: capitalize">@key Events</h5>
                    </a>
                </div>
                <div class="card-body collapse @(first ? "show" : "")" id="@key-body" data-parent="#events">
                    @{ 
                        first = false;
                    }
                    <table class="table">
                        <thead>
                            <tr>
                                <th>
                                    @Html.DisplayNameFor(model => model.Name)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Type)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Description)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Start)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Location)
                                </th>
                                <th>
                                    @Html.DisplayNameFor(model => model.Visibility)
                                </th>
                                <th></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (!query.Any())
                            {
                                <tr style="font-style: italic">
                                    <td colspan="7">There are no @key events</td>
                                </tr>
                            }
                            else
                            {
                                @foreach (var item in query)
                                {
                                    <tr>
                                        <td>
                                            @Html.ActionLink(item.Name, "Details", "Events", new { id = item.Id })
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Type)
                                        </td>
                                        <td title="@item.Description">
                                            @item.Description.DynamicSubstring(50)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Start)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Location)
                                        </td>
                                        <td>
                                            @Html.DisplayFor(modelItem => item.Visibility)
                                        </td>
                                        <td>
                                            <a class="btn btn-primary" href="javascript:void(0)">...</a>
                                        </td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        }

    </div>
</div>
