@using Grow.Server.Areas.MyTeam.Model.ViewModels
@model IEnumerable<TeamEventViewModel>

@{
    ViewData["Title"] = "My Team";
    Layout = "Layouts/_BackendLayout";

    var queries = new List<(string, IOrderedEnumerable<TeamEventViewModel>, bool)>
    {
        ( "past", Model.Where(e => e.Start < DateTime.Now.Date).OrderBy(e => e.Start), false ),
        ( "upcoming", Model.Where(e => e.Start >= DateTime.Now.Date).OrderBy(e => e.Start), true ),
    };
}

<p>
    <input type="checkbox" data-toggle="collapse" data-target="#past-wrapper" role="button" aria-controls="past-wrapper" aria-expanded="false" />
    Also show past events
</p> 

@foreach (var (key, query, isShown) in queries)
{
    <div class="collapse @(isShown ? "show" : "")" id="@key-wrapper">

        @foreach (var evnt in query)
        {
            <div class="card" id="@evnt.Id">
                <div class="card-header">
                    <div class="row">
                        <div class="col-sm-6">
                            <h5>@evnt.Name</h5>
                        </div>
                        <div class="col-sm-6 text-sm-right">
                            <em>@evnt.Type</em>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <strong>@evnt.Location</strong><br />
                            @evnt.Address
                        </div>
                        <div class="col-sm-6 text-sm-right">
                            <strong>@evnt.Start.ToShortDateString()</strong>
                            @if (evnt.HasTimesSet)
                            {
                                <br />
                                @(evnt.Start.ToShortTimeString()) @:- @(evnt.End.ToShortTimeString())
                            }
                        </div>
                    </div>
                </div>
                <hr />
                <div class="card-body row">
                    <div class="col-md-12">
                        @evnt.Description
                    </div>
                </div>
                <hr />
                <div class="card-footer row text-center">
                    <div class="col-6 order-md-0 col-md-3">
                        <h6>@Html.DisplayNameFor(model => model.Visibility)</h6>
                        @evnt.Visibility
                    </div>
                    <div class="col-6 order-md-2 col-md-3">
                        <h6>Need to register?</h6>
                        @(evnt.CanTeamsRegister ? "Yes" : "No")
                    </div>
                    <div class="col-6 order-md-1 col-md-3">
                        <h6>Mandatory?</h6>
                        @(evnt.IsMandatory ? "Mandatory" : "Optional")
                    </div>
                    <div class="col-6 order-md-3 col-md-3">
                        <h6>Registered?</h6>
                        @if (!evnt.CanTeamsRegister)
                        {
                            @: -
                        }
                        else if (evnt.TeamResponse.HasValue)
                        {
                            @: Yes (with @evnt.TeamResponse.Value)
                            @if (evnt.CanTeamRespondNow)
                            {
                                <br />
                                @Html.ActionLink("Change your Response", "Respond", "Events", new { id = evnt.Id })
                            }
                        }
                        else
                        {
                            @: No
                            @if (evnt.CanTeamRespondNow)
                            {
                                <br />
                                @Html.ActionLink("Respond now", "Respond", "Events", new { id = evnt.Id })
                            }
                        }
                    </div>
                </div>
            </div>
        }
    </div>
}
