@model Grow.Data.Entities.Contest

@{
    ViewData["Title"] = "Index";
    Layout = "Layouts/_BackendLayout";

    var editData = new List<int>();
    for (int i = 30; i >= 0; i--)
    {
        editData.Add(new Random().Next(0, 7));
    }
}

@section Scripts {
<script type="text/javascript">
    var ctx = document.getElementById('editHistory').getContext("2d");
    var myChart = new Chart(ctx, {
        type: 'line',
        data: {
            labels: [
                @for (var i = 30; i > 0; i--)
                {
                    if (i % 5 == 0)
                    {
                        @:"@(DateTime.Now.AddDays(-i).ToString("dd.MM."))",
                    }
                    else
                    {
                        @:"",
                    }
                }
                "@DateTime.Now.ToString("dd.MM.")"
            ],
            datasets: [{
                borderColor: "#6bd098",
                backgroundColor: "#6bd098",
                pointRadius: 0,
                pointHoverRadius: 0,
                borderWidth: 3,
                data: [
                    @string.Join(",", editData)
                ]
            }]
        },
        options: {
            bezierCurve: false,
            legend: {
                display: false
            },
            tooltips: {
                enabled: false
            },
            elements: {
                line: {
                    tension: 0
                }
            },
            scales: {
                yAxes: [{
                    ticks: {
                        fontColor: "#9f9f9f",
                        beginAtZero: true,
                        maxTicksLimit: 5,
                        //padding: 20
                    },
                    gridLines: {
                        drawBorder: false,
                        zeroLineColor: "#ccc",
                        color: 'rgba(0,0,0,0.05)'
                    }
                }],
                xAxes: [{
                    barPercentage: 1.6,
                    gridLines: {
                        drawBorder: false,
                        color: 'rgba(0,0,0,0.1)',
                        zeroLineColor: "transparent",
                        display: false,
                    },
                    ticks: {
                        padding: 10,
                        fontColor: "#9f9f9f"
                    }
                }]
            },
        }
    });
</script>
}

<div class="row">
    <div class="col-lg-6 col-md-12 col-sm-12">
        <div class="card card-stats">
            <div class="card-header ">
                <h5 class="card-title">Current public contest</h5>
            </div>
            <div class="card-body ">
                <h2>@ViewBag.SelectedContestYear</h2>
            </div>
            <div class="card-footer ">
                <hr>
                <div class="stats">
                    <a href="@Url.Action("Index", "Contests")"><i class="fa fa-edit"></i> Change by activating newer contests</a>
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-12 col-sm-12">
        <div class="card card-stats">
            <div class="card-header ">
                <h5 class="card-title">Latest contest in DB</h5>
            </div>
            <div class="card-body ">
                <h2>@ViewBag.LatestContestYear</h2>
            </div>
            <div class="card-footer ">
                <hr>
                <div class="stats">
                    <a href="@Url.Action("Create", "Contests")"><i class="fa fa-edit"></i> Change by creating new contests</a>
                </div>
            </div>
        </div>
    </div>
</div>
<h2 style="text-align: center">Stats of @ViewBag.SelectedContestYear</h2>
<div class="row">
    <div class="col-lg-3 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-body ">
                <div class="row">
                    <div class="col-5 col-md-4">
                        <div class="icon-big text-center icon-warning">
                            <i class="nc-icon nc-globe text-warning"></i>
                        </div>
                    </div>
                    <div class="col-7 col-md-8">
                        <div class="numbers">
                            <p class="card-category">Participants</p>
                            <p class="card-title">@Model.Teams.Where(t => t.IsActive).Sum(t => t.Members?.Count ?? 0)
                            <p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer ">
                <hr>
                <div class="stats">
                    <i class="fa fa-refresh"></i> Total # of team members
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-body ">
                <div class="row">
                    <div class="col-5 col-md-4">
                        <div class="icon-big text-center icon-warning">
                            <i class="nc-icon nc-vector text-danger"></i>
                        </div>
                    </div>
                    <div class="col-7 col-md-8">
                        <div class="numbers">
                            <p class="card-category">Visitors</p>
                            <p class="card-title">@Model.Events.Sum(e => e.Responses?.Sum(r => r.ParticipantCount) ?? 0)
                            <p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer ">
                <hr>
                <div class="stats">
                    <i class="fa fa-clock-o"></i> Total # of registrations
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-body ">
                <div class="row">
                    <div class="col-5 col-md-4">
                        <div class="icon-big text-center icon-warning">
                            <i class="nc-icon nc-money-coins text-success"></i>
                        </div>
                    </div>
                    <div class="col-7 col-md-8">
                        <div class="numbers">
                            <p class="card-category">Public price value</p>
                            <p class="card-title">@Model.Prizes.Where(p => p.IsActive).Sum(p => p.RewardValue) €
                            <p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer ">
                <hr>
                <div class="stats">
                    <i class="fa fa-calendar-o"></i> Incl. value of services
                </div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6 col-sm-6">
        <div class="card card-stats">
            <div class="card-body ">
                <div class="row">
                    <div class="col-5 col-md-4">
                        <div class="icon-big text-center icon-warning">
                            <i class="nc-icon nc-favourite-28 text-primary"></i>
                        </div>
                    </div>
                    <div class="col-7 col-md-8">
                        <div class="numbers">
                            <p class="card-category">Public events</p>
                            <p class="card-title">@Model.Events.Where(e => e.IsActive).Count()
                            <p>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer ">
                <hr>
                <div class="stats">
                    <i class="fa fa-refresh"></i> Total # of events
                </div>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="card ">
            <div class="card-header">
                <h5 class="card-title">Content Edit Behavior</h5>
                <p class="card-category">Edits of last 30 days</p>
            </div>
            <div class="card-body">
                <canvas id="editHistory" width="400" height="100"></canvas>
            </div>
            <div class="card-footer">
                <hr>
                <div class="stats">
                    <i class="fa fa-history"></i> Attention: Calculated only by "Updated at" timestamps
                </div>
            </div>
        </div>
    </div>
</div>
