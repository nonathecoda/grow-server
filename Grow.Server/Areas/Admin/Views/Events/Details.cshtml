@using Grow.Data.Entities
@model Grow.Data.Entities.Event

@{
    ViewData["Title"] = "Details";
}

<h2>Details</h2>

<div>
    <h4>Event</h4>

    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <td>
                @Html.DisplayFor(model => model.Name)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Description)
            </th>
            <td>
                @Html.DisplayFor(model => model.Description)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Start)
            </th>
            <td>
                @Html.DisplayFor(model => model.Start)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.End)
            </th>
            <td>
                @Html.DisplayFor(model => model.End)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.HasTimesSet)
            </th>
            <td>
                @Html.DisplayFor(model => model.HasTimesSet)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ExternalEventUrl)
            </th>
            <td>
                @Html.DisplayFor(model => model.ExternalEventUrl)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Location)
            </th>
            <td>
                @Html.DisplayFor(model => model.Location)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Address)
            </th>
            <td>
                @Html.DisplayFor(model => model.Address)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Visibility)
            </th>
            <td>
                @Html.DisplayFor(model => model.Visibility)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Type)
            </th>
            <td>
                @Html.DisplayFor(model => model.Type)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CanVisitorsRegister)
            </th>
            <td>
                @Html.DisplayFor(model => model.CanVisitorsRegister)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CanTeamsRegister)
            </th>
            <td>
                @Html.DisplayFor(model => model.CanTeamsRegister)
            </td>
        </tr>
        <tr>
            <th>
                Registration From
            </th>
            <td>
                @Html.DisplayFor(model => model.TeamRegistrationOptions.From)
            </td>
        </tr>
        <tr>
            <th>
                Registration Until
            </th>
            <td>
                @Html.DisplayFor(model => model.TeamRegistrationOptions.Until)
            </td>
        </tr>
        <tr>
            <th>
                File Uploads allowed for Registration
            </th>
            <td>
                @Html.DisplayFor(model => model.TeamRegistrationOptions.AcceptFileUploads)
            </td>
        </tr>
        <tr>
            <th>
                Allowed File Extensions for Registration
            </th>
            <td>
                @Html.DisplayFor(model => model.TeamRegistrationOptions.AllowedFileExtensionsString)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.IsMandatory)
            </th>
            <td>
                @Html.DisplayFor(model => model.IsMandatory)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ImageId)
            </th>
            <td>
                @Html.DisplayFor(model => model.ImageId)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.HeldById)
            </th>
            <td>
                @Html.DisplayFor(model => model.HeldById)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <td>
                @Html.DisplayFor(model => model.CreatedAt)
            </td>
        </tr>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UpdatedAt)
            </th>
            <td>
                @Html.DisplayFor(model => model.UpdatedAt)
            </td>
        </tr>
    </table>

    <p>
        &nbsp;
    </p>

    <strong>@Html.DisplayNameFor(model => model.Responses)</strong>
    <table class="table">
        @foreach (var response in Model.Responses.OrderBy(e => e.Created))
        {
            string name = string.Empty;
            string submission = null;
            switch (response)
            {
                case TeamResponse tr:
                    name = "Team " + (tr.Team?.Name ?? "Nr. " + tr.Id);
                    submission = tr.FileUrl;
                    break;
                case VisitorResponse vr:
                    name = "Visitor " + vr.Name;
                    break;
                default:
                    break;
            }
            <tr>
                <td>@name</td>
                <td>@response.ParticipantCount</td>
                <td>
                    @if (submission != null)
                    {
                        <a href="@submission">View Submission</a>
                    }
                </td>
            </tr>
        }
    </table>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
